[{"F:\\React_project\\my-blog\\src\\index.js":"1","F:\\React_project\\my-blog\\src\\reportWebVitals.js":"2","F:\\React_project\\my-blog\\src\\App.js":"3","F:\\React_project\\my-blog\\src\\inc\\list.js":"4","F:\\React_project\\my-blog\\src\\inc\\test.js":"5","F:\\React_project\\my-blog\\src\\inc\\home.js":"6","F:\\React_project\\my-blog\\src\\inc\\detail.js":"7","F:\\React_project\\my-blog\\src\\inc\\update.js":"8","F:\\React_project\\my-blog\\src\\inc\\write.js":"9"},{"size":543,"mtime":1612418924000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":2767,"mtime":1616841418726,"results":"13","hashOfConfig":"11"},{"size":3441,"mtime":1616841418743,"results":"14","hashOfConfig":"11"},{"size":426,"mtime":1612418426000,"results":"15","hashOfConfig":"11"},{"size":234,"mtime":1612418964000,"results":"16","hashOfConfig":"11"},{"size":3256,"mtime":1616841492874,"results":"17","hashOfConfig":"11"},{"size":1592,"mtime":1613452448000,"results":"18","hashOfConfig":"11"},{"size":8092,"mtime":1616046874000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1q9muvb",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},"F:\\React_project\\my-blog\\src\\index.js",[],["42","43"],"F:\\React_project\\my-blog\\src\\reportWebVitals.js",[],"F:\\React_project\\my-blog\\src\\App.js",["44"],"F:\\React_project\\my-blog\\src\\inc\\list.js",[],"F:\\React_project\\my-blog\\src\\inc\\test.js",["45"],"import React, {Component } from 'react';\r\nimport queryString from 'query-string'; \r\n\r\n\r\n\r\nclass test extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n        const qry = queryString.parse(this.props.location.search);\r\n\r\n        return(\r\n            <div>\r\n                <h3> This is {qry.name} Page</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default test;","F:\\React_project\\my-blog\\src\\inc\\home.js",[],"F:\\React_project\\my-blog\\src\\inc\\detail.js",["46","47","48"],"F:\\React_project\\my-blog\\src\\inc\\update.js",["49"],"import axios from 'axios';\r\nimport React, {Component } from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\n//muyaho!\r\n\r\nclass Update extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            list : [],\r\n          }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._getInfo2();\r\n    }\r\n\r\n    _getInfo2 = async() => {\r\n    const res = await axios.post('/get/info',{\r\n        'num': this.props.match.params.num,\r\n    });\r\n\r\n    //ㅁㅇㅎ~ ㄱㅁㅋㅅㄴㅅㄷㄴㄱㅈ\r\n    console.log(res.data)\r\n    if(res.data[0] === undefined){\r\n        let cover = [];\r\n        cover.push(res.data);\r\n\r\n        console.log(cover)\r\n\r\n        return this.setState({ list : cover})\r\n    }  \r\n\r\n    this.setState({list : res.data});\r\n\r\n    \r\n    \r\n    }\r\n    \r\n\r\n    goBack = () => {\r\n    this.props.history.goBack();\r\n    };\r\n\r\n\r\n\r\n    render(){\r\n        \r\n        const { list} = this.state;\r\n    \r\n        return(\r\n            <>\r\n            { list.length !== 0 ? list.map( (row) => (\r\n              \r\n              <div key={row.num}>\r\n                <div>\r\n                  제목 : <input type =\"\" value={row.title}></input>\r\n                </div>\r\n                <div>\r\n                  글쓴이 : {row.author}\r\n                </div>\r\n                <div>\r\n                  내용 : {row.content}\r\n                </div>\r\n\r\n                \r\n              </div>\r\n            )) : null} \r\n\r\n            <button type='button' onClick={this.goBack}>뒤로가기</button>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Update;","F:\\React_project\\my-blog\\src\\inc\\write.js",["50","51","52","53","54","55","56"],"import React, {Component } from 'react'; \r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport axios from 'axios';\r\nimport fileDownload from 'file-saver';\r\n\r\n\r\nclass Write extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          selectedFile: {},\r\n          num: '',\r\n          test_col: '',\r\n          title: '',\r\n          author: '',\r\n          content: '',\r\n          files: [],\r\n        }\r\n      }\r\n\r\n    \r\n    //num 값 있으면 수정해야하므로 데이턱 가져오기\r\n    componentDidMount(){\r\n        if(this.props.match.params.num !== undefined){\r\n            this._getInfo2();\r\n        }\r\n    }\r\n\r\n    _getInfo2 = async() => {\r\n        \r\n        \r\n\r\n        const res = await axios.post('/get/info',{\r\n            'num': this.props.match.params.num,\r\n        });\r\n\r\n        //ㅁㅇㅎ~ ㄱㅁㅋㅅㄴㅅㄷㄴㄱㅈ\r\n        console.log(res.data)\r\n        if(res.data[0] === undefined){\r\n\r\n            //값 배정\r\n            this.setState({\r\n                num : res.data.num,\r\n                title : res.data.title,\r\n                author : res.data.author,\r\n                content : res.data.content\r\n            })\r\n\r\n            //파일 가져오기\r\n            const res_file = await axios.post('/get/file',{\r\n                'num': res.data.num,\r\n            });\r\n\r\n            this.setState({files : res_file.data});\r\n\r\n            console.log(this.state.files)\r\n            \r\n        }  \r\n    \r\n    }\r\n\r\n    // INPUT 글쓰기\r\n    handleChange = (e) => {\r\n        console.log(\"NAME : \"+e.target.name)\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    // 파일 선택시 담기\r\n    handleFileInput(e){\r\n        console.log(e.target.files[0])\r\n        \r\n        //fileDownload.saveAs(e.target.files[0], \"test.txt\");\r\n\r\n        this.setState({\r\n          selectedFile : e.target.files,\r\n        })\r\n\r\n    }\r\n\r\n\r\n    //INSERT 작업 처리\r\n    _addData = async() => {\r\n        \r\n        const { selectedFile } = this.state;\r\n\r\n        const f = document.form;\r\n\r\n        const formData = new FormData();\r\n        formData.append('test_col', this.state.test_col);\r\n        formData.append('title', this.state.title);\r\n        formData.append('author', this.state.author);\r\n        formData.append('content', this.state.content);\r\n        formData.append('num', this.state.num);\r\n        \r\n        \r\n        //파일 개수에따라 다중 업로드\r\n        for (let i = 0 ; i < selectedFile.length ; i++) {\r\n            formData.append('files', selectedFile[i]);\r\n        } \r\n            \r\n\r\n        //cnst {name} = this.state; \r\n        //e.preveontDefault();\r\n        \r\n        console.log(this.state.selectedFile)\r\n        const res = await axios('/add/data',{\r\n          method : 'POST',\r\n          data : formData ,\r\n          headers: {\r\n            //\"content-type\": \"multipart/form-data\"\r\n            \r\n          } \r\n        })\r\n    \r\n        console.log(res.data.success)\r\n        if(res.data.success === 1){\r\n          alert('데이터를 추가했습니다.');\r\n          return window.location.reload();\r\n        }else{\r\n          alert('데이터를 수정했습니다.');\r\n          return window.location.reload();\r\n        }   \r\n      }\r\n\r\n\r\n\r\n\r\n      filedown = async (file_name,file_path) => {\r\n        \r\n        \r\n\r\n        // 나중에 이미지 경로랑 원본 이름도 받아서 넣어야함\r\n \r\n        \r\n        // fetch 로 이미지 경로 요청 보내서 받아옴\r\n\r\n        console.log(\"file_name : \" + file_name);\r\n        const res = await fetch(file_path);\r\n        // 받아온 경로 값 blob 으로 변환\r\n        const blob = await res.blob();\r\n\r\n        \r\n        // blob 된거 변환\r\n        fileDownload.saveAs(blob, file_name);\r\n        \r\n        \r\n      }\r\n\r\n      filedelete = async (file_num) => {\r\n        //파일 삭제\r\n\r\n        const remove = window.confirm('정말로 삭제 하시겠습니까?');\r\n\r\n        if(remove){\r\n\r\n            const res = await axios.post('/delete/file',{\r\n                'num': file_num,\r\n            });\r\n        \r\n            //ㅁㅇㅎ~ ㄱㅁㅋㅅㄴㅅㄷㄴㄱㅈ\r\n            alert('삭제 되었습니다.')\r\n            return window.location.reload();\r\n            \r\n                \r\n\r\n        }\r\n        \r\n        \r\n\r\n\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form id=\"form\" name=\"form\"  /*action='/add/data' method=\"POST\"  enctype=\"multipart/form-data\" */ >\r\n                <Table aria-label=\"simple table\" >\r\n                    <colgroup>\r\n                        <col width=\"20%\" /> \r\n                        <col width=\"70%\" /> \r\n                    </colgroup>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell>TITLE</TableCell>\r\n                            <TableCell><TextField  name=\"title\" variant=\"outlined\" value={this.state.title} onChange={this.handleChange} /></TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>AUTHOR</TableCell>\r\n                            <TableCell><TextField  name=\"author\" variant=\"outlined\" value={this.state.author} onChange={this.handleChange} /></TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>CONTENT</TableCell>\r\n                            <TableCell>\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\" \r\n                                label=\"Multiline\"\r\n                                name=\"content\"\r\n                                multiline\r\n                                rows={10}\r\n                                variant=\"outlined\"\r\n                                value={this.state.content}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>FILE(available multiple)</TableCell>\r\n                            <TableCell>\r\n                                <input type='file' id=\"files\" name=\"files\" multiple onChange={e => this.handleFileInput(e)}/>\r\n                                { this.state.files.length !== 0 ? this.state.files.map( (row) => (\r\n                                    <>\r\n                                    <div>\r\n                                        <a href=\"#\" onClick={() => this.filedown(row.file_nm,row.file_location)}>{row.file_nm}</a> {\"   \"}\r\n                                        <button type=\"button\" onClick={() => this.filedelete(row.num)}>파일 삭제</button>\r\n                                    </div>\r\n                                    </>\r\n                                )) : null} \r\n                            </TableCell>\r\n                        </TableRow>\r\n                        {/* \r\n                        <TableRow>\r\n                            <TableCell>FILE2</TableCell>\r\n                            <TableCell><input type='file' id=\"file\" name=\"file\" onChange={e => this.handleFileInput(e)} /></TableCell>\r\n                        </TableRow> */} \r\n                    </TableBody> \r\n                </Table>\r\n\r\n                \r\n                <button type=\"button\" value='Add' onClick={this._addData} >Add</button>\r\n                {/* <button type=\"button\" onClick={this.filedown}>FileDownTest</button> */}\r\n                </form>\r\n            </div> \r\n\r\n        )\r\n    }\r\n       \r\n\r\n}\r\n\r\nexport default Write;",{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":9,"nodeType":"63","messageId":"64","endLine":3,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":8,"column":5,"nodeType":"67","messageId":"68","endLine":11,"endColumn":6},{"ruleId":"61","severity":1,"message":"69","line":4,"column":9,"nodeType":"63","messageId":"64","endLine":4,"endColumn":19},{"ruleId":"61","severity":1,"message":"70","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":17},{"ruleId":"61","severity":1,"message":"71","line":12,"column":8,"nodeType":"63","messageId":"64","endLine":12,"endColumn":14},{"ruleId":"61","severity":1,"message":"72","line":4,"column":9,"nodeType":"63","messageId":"64","endLine":4,"endColumn":13},{"ruleId":"61","severity":1,"message":"73","line":6,"column":8,"nodeType":"63","messageId":"64","endLine":6,"endColumn":22},{"ruleId":"61","severity":1,"message":"70","line":7,"column":8,"nodeType":"63","messageId":"64","endLine":7,"endColumn":17},{"ruleId":"61","severity":1,"message":"74","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":13},{"ruleId":"61","severity":1,"message":"75","line":10,"column":8,"nodeType":"63","messageId":"64","endLine":10,"endColumn":13},{"ruleId":"61","severity":1,"message":"76","line":99,"column":15,"nodeType":"63","messageId":"64","endLine":99,"endColumn":16},{"ruleId":"61","severity":1,"message":"77","line":169,"column":19,"nodeType":"63","messageId":"64","endLine":169,"endColumn":22},{"ruleId":"78","severity":1,"message":"79","line":226,"column":41,"nodeType":"80","endLine":226,"endColumn":114},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'withStyles' is defined but never used.","'TableHead' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'TableContainer' is defined but never used.","'Paper' is defined but never used.","'Input' is defined but never used.","'f' is assigned a value but never used.","'res' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]