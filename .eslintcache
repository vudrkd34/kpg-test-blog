[{"C:\\project\\react_blog\\my-blog\\src\\index.js":"1","C:\\project\\react_blog\\my-blog\\src\\App.js":"2","C:\\project\\react_blog\\my-blog\\src\\reportWebVitals.js":"3","C:\\project\\react_blog\\my-blog\\src\\inc\\home.js":"4","C:\\project\\react_blog\\my-blog\\src\\inc\\test.js":"5","C:\\project\\react_blog\\my-blog\\src\\inc\\list.js":"6","C:\\project\\react_blog\\my-blog\\src\\inc\\write.js":"7","c:\\project\\react_blog\\my-blog\\src\\index.js":"8","c:\\project\\react_blog\\my-blog\\src\\reportWebVitals.js":"9","c:\\project\\react_blog\\my-blog\\src\\App.js":"10","c:\\project\\react_blog\\my-blog\\src\\inc\\home.js":"11","c:\\project\\react_blog\\my-blog\\src\\inc\\test.js":"12","c:\\project\\react_blog\\my-blog\\src\\inc\\list.js":"13","c:\\project\\react_blog\\my-blog\\src\\inc\\write.js":"14","C:\\project\\react_blog\\my-blog\\src\\inc\\detail.js":"15","C:\\project\\react_blog\\my-blog\\src\\inc\\update.js":"16","c:\\project\\react_blog\\my-blog\\src\\inc\\detail.js":"17","c:\\project\\react_blog\\my-blog\\src\\inc\\update.js":"18"},{"size":543,"mtime":1612418923989,"results":"19","hashOfConfig":"20"},{"size":2649,"mtime":1616572482061,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":234,"mtime":1612418963089,"results":"23","hashOfConfig":"20"},{"size":426,"mtime":1612418425034,"results":"24","hashOfConfig":"20"},{"size":3440,"mtime":1616576738699,"results":"25","hashOfConfig":"20"},{"size":8092,"mtime":1616046874953,"results":"26","hashOfConfig":"20"},{"size":543,"mtime":1612418923989,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"28"},{"size":2726,"mtime":1613452513923,"results":"30","hashOfConfig":"28"},{"size":234,"mtime":1612418963089,"results":"31","hashOfConfig":"28"},{"size":426,"mtime":1612418425034,"results":"32","hashOfConfig":"28"},{"size":3089,"mtime":1613367473402,"results":"33","hashOfConfig":"28"},{"size":7521,"mtime":1615873918144,"results":"34","hashOfConfig":"28"},{"size":3255,"mtime":1616576669184,"results":"35","hashOfConfig":"20"},{"size":1592,"mtime":1613452448310,"results":"36","hashOfConfig":"20"},{"size":2097,"mtime":1613452529399,"results":"37","hashOfConfig":"28"},{"size":1592,"mtime":1613452448310,"results":"38","hashOfConfig":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"1tw7ar2",{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"41"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"1kgdet5",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\project\\react_blog\\my-blog\\src\\index.js",[],["82","83"],"C:\\project\\react_blog\\my-blog\\src\\App.js",["84"],"import React, {Component} from 'react';\nimport './App.css';\nimport {BrowserRouter, Route , Link, Switch} from 'react-router-dom';\nimport axios from 'axios';\n\nimport Home from './inc/home.js';\nimport Test from './inc/test.js';\nimport List from './inc/list.js';\nimport Write from './inc/write.js';\nimport Detail from './inc/detail.js';\nimport Update from './inc/update.js';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    console.log('TEST 페이지다')\n    this.state = { \n      home : '',\n      //list : [],\n      update : false,\n    } \n  } \n\n  _addData = async(e) => {\n    const {name} = this.state;\n    e.preventDefault();\n\n    const res = await axios('/add/data',{\n      method : 'POST',\n      data : {'data' : name} ,\n      headers: new Headers()\n    }) \n    \n\n\n    if(res.data){\n      alert('데이터를 추가했습니다.');\n      return window.location.reload();\n    }\n  }\n\n  _modify = async (el) => {\n    const modify = prompt(el.test_col + '을 어떤 이름으로 변경할까요?')\n\n    if(modify !== null ){\n      console.log(\"modify? : \" + modify)\n      console.log(\"num ? : \" + el.num)\n      const body = {\n        test_col : modify,\n        num : el.num\n      }\n    \n\n    const res = await axios('/modify/data' ,{\n      method : 'POST',\n      data : { 'modify' : body },\n      headers : new Headers()\n    })\n\n    if(res.data){\n      alert('데이터를 수정했습니다.')\n      return window.location.reload();\n      }\n    }\n  } \n\n\n\n  _nmaeUpdate(e){\n    this.setState({name : e.target.value})\n  }\n\n\n  render() {\n\n    return(\n      <div className='App'>\n        <div className=\"RouterTest\">\n          \n       \n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/test/:data\" component={Test}   />\n          \n            <div>\n            <Link to='/'>Home</Link> {'\\u00A0'} \n            <Link to='/list'>게시판</Link>\n            </div>\n          \n        \n        \n        </div>\n\n        <br />\n\n\n        <br /> <br />\n          <div className=\"board_area\">\n            <Route path=\"/list\" component={List} />\n            <Switch>\n              <Route path=\"/insert_form/:num\" component={Write} />\n              <Route path=\"/insert_form\" component={Write} />\n            </Switch>\n            <Switch>\n              <Route path=\"/detail/:num\" component={Detail} />\n              <Route path=\"/detail\" component={Detail} />\n            </Switch>\n            <Switch>\n              <Route path=\"/update/:num\" component={Update} />\n              <Route path=\"/update\" component={Update} />\n            </Switch>\n          </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","C:\\project\\react_blog\\my-blog\\src\\reportWebVitals.js",[],"C:\\project\\react_blog\\my-blog\\src\\inc\\home.js",[],"C:\\project\\react_blog\\my-blog\\src\\inc\\test.js",["85"],"import React, {Component } from 'react';\r\nimport queryString from 'query-string'; \r\n\r\n\r\n\r\nclass test extends Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    render(){\r\n        const qry = queryString.parse(this.props.location.search);\r\n\r\n        return(\r\n            <div>\r\n                <h3> This is {qry.name} Page</h3>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default test;","C:\\project\\react_blog\\my-blog\\src\\inc\\list.js",[],"C:\\project\\react_blog\\my-blog\\src\\inc\\write.js",["86","87","88","89","90","91","92"],"import React, {Component } from 'react'; \r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Input from '@material-ui/core/Input';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport axios from 'axios';\r\nimport fileDownload from 'file-saver';\r\n\r\n\r\nclass Write extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          selectedFile: {},\r\n          num: '',\r\n          test_col: '',\r\n          title: '',\r\n          author: '',\r\n          content: '',\r\n          files: [],\r\n        }\r\n      }\r\n\r\n    \r\n    //num 값 있으면 수정해야하므로 데이턱 가져오기\r\n    componentDidMount(){\r\n        if(this.props.match.params.num !== undefined){\r\n            this._getInfo2();\r\n        }\r\n    }\r\n\r\n    _getInfo2 = async() => {\r\n        \r\n        \r\n\r\n        const res = await axios.post('/get/info',{\r\n            'num': this.props.match.params.num,\r\n        });\r\n\r\n        //ㅁㅇㅎ~ ㄱㅁㅋㅅㄴㅅㄷㄴㄱㅈ\r\n        console.log(res.data)\r\n        if(res.data[0] === undefined){\r\n\r\n            //값 배정\r\n            this.setState({\r\n                num : res.data.num,\r\n                title : res.data.title,\r\n                author : res.data.author,\r\n                content : res.data.content\r\n            })\r\n\r\n            //파일 가져오기\r\n            const res_file = await axios.post('/get/file',{\r\n                'num': res.data.num,\r\n            });\r\n\r\n            this.setState({files : res_file.data});\r\n\r\n            console.log(this.state.files)\r\n            \r\n        }  \r\n    \r\n    }\r\n\r\n    // INPUT 글쓰기\r\n    handleChange = (e) => {\r\n        console.log(\"NAME : \"+e.target.name)\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    // 파일 선택시 담기\r\n    handleFileInput(e){\r\n        console.log(e.target.files[0])\r\n        \r\n        //fileDownload.saveAs(e.target.files[0], \"test.txt\");\r\n\r\n        this.setState({\r\n          selectedFile : e.target.files,\r\n        })\r\n\r\n    }\r\n\r\n\r\n    //INSERT 작업 처리\r\n    _addData = async() => {\r\n        \r\n        const { selectedFile } = this.state;\r\n\r\n        const f = document.form;\r\n\r\n        const formData = new FormData();\r\n        formData.append('test_col', this.state.test_col);\r\n        formData.append('title', this.state.title);\r\n        formData.append('author', this.state.author);\r\n        formData.append('content', this.state.content);\r\n        formData.append('num', this.state.num);\r\n        \r\n        \r\n        //파일 개수에따라 다중 업로드\r\n        for (let i = 0 ; i < selectedFile.length ; i++) {\r\n            formData.append('files', selectedFile[i]);\r\n        } \r\n            \r\n\r\n        //cnst {name} = this.state; \r\n        //e.preveontDefault();\r\n        \r\n        console.log(this.state.selectedFile)\r\n        const res = await axios('/add/data',{\r\n          method : 'POST',\r\n          data : formData ,\r\n          headers: {\r\n            //\"content-type\": \"multipart/form-data\"\r\n            \r\n          } \r\n        })\r\n    \r\n        console.log(res.data.success)\r\n        if(res.data.success === 1){\r\n          alert('데이터를 추가했습니다.');\r\n          return window.location.reload();\r\n        }else{\r\n          alert('데이터를 수정했습니다.');\r\n          return window.location.reload();\r\n        }   \r\n      }\r\n\r\n\r\n\r\n\r\n      filedown = async (file_name,file_path) => {\r\n        \r\n        \r\n\r\n        // 나중에 이미지 경로랑 원본 이름도 받아서 넣어야함\r\n \r\n        \r\n        // fetch 로 이미지 경로 요청 보내서 받아옴\r\n\r\n        console.log(\"file_name : \" + file_name);\r\n        const res = await fetch(file_path);\r\n        // 받아온 경로 값 blob 으로 변환\r\n        const blob = await res.blob();\r\n\r\n        \r\n        // blob 된거 변환\r\n        fileDownload.saveAs(blob, file_name);\r\n        \r\n        \r\n      }\r\n\r\n      filedelete = async (file_num) => {\r\n        //파일 삭제\r\n\r\n        const remove = window.confirm('정말로 삭제 하시겠습니까?');\r\n\r\n        if(remove){\r\n\r\n            const res = await axios.post('/delete/file',{\r\n                'num': file_num,\r\n            });\r\n        \r\n            //ㅁㅇㅎ~ ㄱㅁㅋㅅㄴㅅㄷㄴㄱㅈ\r\n            alert('삭제 되었습니다.')\r\n            return window.location.reload();\r\n            \r\n                \r\n\r\n        }\r\n        \r\n        \r\n\r\n\r\n      }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form id=\"form\" name=\"form\"  /*action='/add/data' method=\"POST\"  enctype=\"multipart/form-data\" */ >\r\n                <Table aria-label=\"simple table\" >\r\n                    <colgroup>\r\n                        <col width=\"20%\" /> \r\n                        <col width=\"70%\" /> \r\n                    </colgroup>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell>TITLE</TableCell>\r\n                            <TableCell><TextField  name=\"title\" variant=\"outlined\" value={this.state.title} onChange={this.handleChange} /></TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>AUTHOR</TableCell>\r\n                            <TableCell><TextField  name=\"author\" variant=\"outlined\" value={this.state.author} onChange={this.handleChange} /></TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>CONTENT</TableCell>\r\n                            <TableCell>\r\n                            <TextField\r\n                                id=\"outlined-multiline-static\" \r\n                                label=\"Multiline\"\r\n                                name=\"content\"\r\n                                multiline\r\n                                rows={10}\r\n                                variant=\"outlined\"\r\n                                value={this.state.content}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell>FILE(available multiple)</TableCell>\r\n                            <TableCell>\r\n                                <input type='file' id=\"files\" name=\"files\" multiple onChange={e => this.handleFileInput(e)}/>\r\n                                { this.state.files.length !== 0 ? this.state.files.map( (row) => (\r\n                                    <>\r\n                                    <div>\r\n                                        <a href=\"#\" onClick={() => this.filedown(row.file_nm,row.file_location)}>{row.file_nm}</a> {\"   \"}\r\n                                        <button type=\"button\" onClick={() => this.filedelete(row.num)}>파일 삭제</button>\r\n                                    </div>\r\n                                    </>\r\n                                )) : null} \r\n                            </TableCell>\r\n                        </TableRow>\r\n                        {/* \r\n                        <TableRow>\r\n                            <TableCell>FILE2</TableCell>\r\n                            <TableCell><input type='file' id=\"file\" name=\"file\" onChange={e => this.handleFileInput(e)} /></TableCell>\r\n                        </TableRow> */} \r\n                    </TableBody> \r\n                </Table>\r\n\r\n                \r\n                <button type=\"button\" value='Add' onClick={this._addData} >Add</button>\r\n                {/* <button type=\"button\" onClick={this.filedown}>FileDownTest</button> */}\r\n                </form>\r\n            </div> \r\n\r\n        )\r\n    }\r\n       \r\n\r\n}\r\n\r\nexport default Write;","c:\\project\\react_blog\\my-blog\\src\\index.js",[],["93","94"],"c:\\project\\react_blog\\my-blog\\src\\reportWebVitals.js",[],"c:\\project\\react_blog\\my-blog\\src\\App.js",["95"],"c:\\project\\react_blog\\my-blog\\src\\inc\\home.js",[],"c:\\project\\react_blog\\my-blog\\src\\inc\\test.js",["96"],"c:\\project\\react_blog\\my-blog\\src\\inc\\list.js",[],"c:\\project\\react_blog\\my-blog\\src\\inc\\write.js",["97","98","99","100","101","102"],"C:\\project\\react_blog\\my-blog\\src\\inc\\detail.js",["103","104","105"],"import axios from 'axios';\r\nimport React, {Component } from 'react';\r\n\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport {Link} from 'react-router-dom';\r\n//muyaho!\r\n\r\nclass Detail extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            list : [],\r\n          }\r\n    }\r\n\r\n      componentDidMount(){\r\n        this._getInfo2();\r\n\r\n        \r\n      }\r\n\r\n      autoEnter(str){\r\n\r\n        var re = /\\r\\n/g    //개행문자를 나타내는 정규표현식\r\n        var eng_word = str;\r\n        return eng_word = eng_word.replace(re, \"이이잉\");   //개행문자를 _로 치환\r\n\r\n      }\r\n\r\n      _getInfo2 = async() => {\r\n        const res = await axios.post('/get/info',{\r\n            'num': this.props.match.params.num,\r\n        });\r\n    \r\n        //ㅁㅇㅎ~ ㄱㅁㅋㅅㄴㅅㄷㄴㄱㅈ\r\n        console.log(res.data)\r\n        if(res.data[0] === undefined){\r\n          let cover = [];\r\n          cover.push(res.data);\r\n\r\n          console.log(cover)\r\n    \r\n          return this.setState({ list : cover})\r\n        }  \r\n    \r\n        this.setState({list : res.data});\r\n\r\n        \r\n      \r\n      }\r\n    \r\n      _getInfo = async() => {\r\n          fetch('/get/info', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n              'num': 'sunghae'\r\n            })\r\n          })\r\n          .then(response => response.json())\r\n          .then((data) => console.log(data.title))\r\n      \r\n      }\r\n\r\n\r\n\r\n      goBack = () => {\r\n        this.props.history.goBack();\r\n      };\r\n    \r\n\r\n\r\n    render(){\r\n        \r\n        const { list} = this.state;\r\n\r\n        return(\r\n            <>\r\n            <TableContainer component={Paper}>\r\n            <Table aria-label=\"simple table\">\r\n            <TableBody>\r\n            { list.length !== 0 ? list.map( (row) => (\r\n            <>\r\n              <TableRow key={row.num}>\r\n                <TableCell>제목</TableCell>\r\n                <TableCell>{row.title}</TableCell>\r\n              </TableRow> \r\n              <TableRow>\r\n                <TableCell>글쓴이</TableCell>\r\n                <TableCell>{row.author}</TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell>내용</TableCell>\r\n                <TableCell>{this.autoEnter(row.content)}</TableCell>\r\n              </TableRow>\r\n              \r\n            </>\r\n            )) : null} \r\n            </TableBody>\r\n            </Table>\r\n            <Link to={`/insert_form/${this.props.match.params.num}`} ><button type='button'>수정</button></Link>\r\n            <button type='button' onClick={this.goBack}>뒤로가기</button>\r\n            </TableContainer>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Detail;","C:\\project\\react_blog\\my-blog\\src\\inc\\update.js",["106"],"import axios from 'axios';\r\nimport React, {Component } from 'react';\r\n\r\nimport {Link} from 'react-router-dom';\r\n//muyaho!\r\n\r\nclass Update extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            list : [],\r\n          }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this._getInfo2();\r\n    }\r\n\r\n    _getInfo2 = async() => {\r\n    const res = await axios.post('/get/info',{\r\n        'num': this.props.match.params.num,\r\n    });\r\n\r\n    //ㅁㅇㅎ~ ㄱㅁㅋㅅㄴㅅㄷㄴㄱㅈ\r\n    console.log(res.data)\r\n    if(res.data[0] === undefined){\r\n        let cover = [];\r\n        cover.push(res.data);\r\n\r\n        console.log(cover)\r\n\r\n        return this.setState({ list : cover})\r\n    }  \r\n\r\n    this.setState({list : res.data});\r\n\r\n    \r\n    \r\n    }\r\n    \r\n\r\n    goBack = () => {\r\n    this.props.history.goBack();\r\n    };\r\n\r\n\r\n\r\n    render(){\r\n        \r\n        const { list} = this.state;\r\n    \r\n        return(\r\n            <>\r\n            { list.length !== 0 ? list.map( (row) => (\r\n              \r\n              <div key={row.num}>\r\n                <div>\r\n                  제목 : <input type =\"\" value={row.title}></input>\r\n                </div>\r\n                <div>\r\n                  글쓴이 : {row.author}\r\n                </div>\r\n                <div>\r\n                  내용 : {row.content}\r\n                </div>\r\n\r\n                \r\n              </div>\r\n            )) : null} \r\n\r\n            <button type='button' onClick={this.goBack}>뒤로가기</button>\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Update;","c:\\project\\react_blog\\my-blog\\src\\inc\\detail.js",[],"c:\\project\\react_blog\\my-blog\\src\\inc\\update.js",["107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":9,"nodeType":"114","messageId":"115","endLine":3,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":8,"column":5,"nodeType":"118","messageId":"119","endLine":11,"endColumn":6},{"ruleId":"112","severity":1,"message":"120","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":22},{"ruleId":"112","severity":1,"message":"121","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":17},{"ruleId":"112","severity":1,"message":"122","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":13},{"ruleId":"112","severity":1,"message":"123","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":13},{"ruleId":"112","severity":1,"message":"124","line":99,"column":15,"nodeType":"114","messageId":"115","endLine":99,"endColumn":16},{"ruleId":"112","severity":1,"message":"125","line":169,"column":19,"nodeType":"114","messageId":"115","endLine":169,"endColumn":22},{"ruleId":"126","severity":1,"message":"127","line":226,"column":41,"nodeType":"128","endLine":226,"endColumn":114},{"ruleId":"108","replacedBy":"129"},{"ruleId":"110","replacedBy":"130"},{"ruleId":"112","severity":1,"message":"113","line":3,"column":9,"nodeType":"114","messageId":"115","endLine":3,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":8,"column":5,"nodeType":"118","messageId":"119","endLine":11,"endColumn":6},{"ruleId":"112","severity":1,"message":"120","line":6,"column":8,"nodeType":"114","messageId":"115","endLine":6,"endColumn":22},{"ruleId":"112","severity":1,"message":"121","line":7,"column":8,"nodeType":"114","messageId":"115","endLine":7,"endColumn":17},{"ruleId":"112","severity":1,"message":"122","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":13},{"ruleId":"112","severity":1,"message":"123","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":13},{"ruleId":"112","severity":1,"message":"124","line":99,"column":15,"nodeType":"114","messageId":"115","endLine":99,"endColumn":16},{"ruleId":"126","severity":1,"message":"127","line":200,"column":41,"nodeType":"128","endLine":200,"endColumn":114},{"ruleId":"112","severity":1,"message":"131","line":4,"column":9,"nodeType":"114","messageId":"115","endLine":4,"endColumn":19},{"ruleId":"112","severity":1,"message":"121","line":9,"column":8,"nodeType":"114","messageId":"115","endLine":9,"endColumn":17},{"ruleId":"112","severity":1,"message":"132","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":14},{"ruleId":"112","severity":1,"message":"133","line":4,"column":9,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},{"ruleId":"112","severity":1,"message":"133","line":4,"column":9,"nodeType":"114","messageId":"115","endLine":4,"endColumn":13},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'Paper' is defined but never used.","'Input' is defined but never used.","'f' is assigned a value but never used.","'res' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["134"],["135"],"'withStyles' is defined but never used.","'Button' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]